import React, { useEffect, useRef, useState } from "react";
import { Swiper, SwiperSlide } from "swiper/react"; // Navigation Î™®Îìà ÏóÜÏù¥ Í∑∏ÎÉ• SwiperÎßå ÏûÑÌè¨Ìä∏
import "swiper/css";
import "../../css/Education.css";

export default function SwiperCard() {
  const swiperRef = useRef(null);
  const [swiperList, setSwiperList] = useState([]);
  const [searchQuery, setSearchQuery] = useState(""); // Í≤ÄÏÉâÏñ¥ ÏÉÅÌÉú Ï∂îÍ∞Ä
  const [filteredTableData, setFilteredTableData] = useState([]);
  const [topic, setTopic] = useState(null); // Ï£ºÏ†ú ÏÑ†ÌÉù ÏÉÅÌÉú

  // Í≤ÄÏÉâ Ï≤òÎ¶¨
  const handleSearch = () => {
    if (searchQuery.trim() === "") return;
  
    fetch(`http://localhost:8080/api/education/search?name=${searchQuery}`)
      .then((res) => res.json())
      .then((data) => {
        console.log(data); 
        setFilteredTableData(data); // Î∞îÎ°ú ÏÑ∏ÌåÖ Í∞ÄÎä•
      })
      .catch((error) => console.error("Search error:", error));
  };
  

  // ÌÜ†ÌîΩ ÌÅ¥Î¶≠ Ïãú Ìï¥Îãπ ÌÜ†ÌîΩÏúºÎ°ú Îç∞Ïù¥ÌÑ∞ ÌïÑÌÑ∞ÎßÅ
  const handleTopic = (topic) => {
    setTopic(topic);
  
    fetch(`http://localhost:8080/api/education/category?category=${topic}`)
      .then((res) => res.json())
      .then((data) => {
        setFilteredTableData(data);
      })
      .catch((error) => console.error("Category filter error:", error));
  };
  

   // Ïπ¥Îìú ÌÅ¥Î¶≠ Ïãú ÌÖåÏù¥Î∏î ÎÇ¥Ïö© ÏóÖÎç∞Ïù¥Ìä∏
   const handleCardClick = (data) => {
    setFilteredTableData([data]); // Í∏∞Ï°¥ Îç∞Ïù¥ÌÑ∞Î•º ÎçÆÏñ¥Ïì∞Í≥† ÌÅ¥Î¶≠Ìïú Îç∞Ïù¥ÌÑ∞Îßå ÌëúÏãú
  };

  useEffect(() => {
    fetch("http://localhost:8080/api/education")
      .then((res) => res.json())
      .then((data) => {
        setSwiperList(data); // Í∏∞Ï°¥ data.dataÍ∞Ä ÏïÑÎãå data
      })
      .catch((error) => console.error("Error fetching data:", error));
  }, []);

  return (
    <div className="Edu_Main">
      {/* Í≤ÄÏÉâÏ∞Ω */}
      <div className="Edu_Content">
        <input
          className="searchbar"
          type="text"
          placeholder="Í≤ÄÏÉâÏñ¥Î•º ÏûÖÎ†•ÌïòÏãúÏò§"
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)} // Í≤ÄÏÉâÏñ¥ ÏûÖÎ†•ÏùÑ ÏÉÅÌÉúÎ°ú Í¥ÄÎ¶¨
        />
        <button className="search-but" onClick={handleSearch}>
          üîç
        </button>
      </div>

      <div className="Edu_TableChart">
        <table className="chart" style={{ width: "80%", border: "1px solid black", borderCollapse: "collapse" }}>
          <thead>
            <tr>
              <th onClick={() => handleTopic("fruct")}>Í≥ºÏùº</th>
              <th onClick={() => handleTopic("animal")}>ÎèôÎ¨º</th>
              <th onClick={() => handleTopic("hello")}>Ïù∏ÏÇ¨</th>
              <th onClick={() => handleTopic("color")}>ÏÉâÍπî</th>
              <th onClick={() => handleTopic("plecd")}>Î¨ºÍ±¥</th>
            </tr>
          </thead>
        </table>
      </div>

      {/* ÌïÑÌÑ∞ÎßÅÎêú ÌÖåÏù¥Î∏î Ï∂úÎ†• */}
      {filteredTableData.length > 0 && (
        <div className="Edu_TableChart">
          <table className="chart" style={{ width: "80%", border: "1px solid black", borderCollapse: "collapse" }}>
            <thead>
              <tr>
                <th>Ïù¥Î¶Ñ</th>
                <th>Ïù¥ÎØ∏ÏßÄ</th>
              </tr>
            </thead>
            <tbody>
              {filteredTableData.map((data, idx) => (
                <tr key={idx}>
                  <td>{data.name}</td>
                  <td style={{display: "flex", flexdirection: "column"}}>
                    <img src={data.imageUrl} alt={data.name} style={{ width: "150px", display: "block", margin: "auto" }} />
                    <video src={data.videoUrl} style={{ width: "300px", display: "block", margin: "auto" }} controls />
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}
     
      <div className="swiper-container">
        {/* Swiper Ïù∏Ïä§ÌÑ¥Ïä§Í∞Ä Ï†úÎåÄÎ°ú ÏÉùÏÑ±ÎêòÏóàÏùÑ ÎïåÎßå Prev/Next Î≤ÑÌäº ÌôúÏÑ±Ìôî */}
        {swiperList && swiperList.length > 0 ? (
          <>
            <button className="prev-btn" onClick={() => swiperRef.current?.slidePrev()}>
              Prev
            </button>

            <Swiper
              onBeforeInit={(swiper) => {
                swiperRef.current = swiper; // Swiper Ïù∏Ïä§ÌÑ¥Ïä§ Ìï†Îãπ
              }}
              slidesPerView={1}
              breakpoints={{
                800: { slidesPerView: 1 },
                1200: { slidesPerView: 2 },
                1600: { slidesPerView: 3 },
                1920: { slidesPerView: 4 },
              }}
              navigation // ÏûêÎèôÏúºÎ°ú ÎÇ¥Ïû•Îêú Navigation Î™®Îìà ÏÇ¨Ïö©
            >
              {swiperList.map((data, idx) => (
                <SwiperSlide key={idx}>
                  <div className="card-wrap" onClick={() => handleCardClick(data)}>
                  <img src={data.imageUrl} alt={data.displayName} style={{ width: "150px", display: "block", margin: "auto" }} />
                  <video src={data.videoUrl} controls />
                  <p>{data.name}</p>
                  </div>
                </SwiperSlide>
              ))}
            </Swiper>

            <button className="next-btn" onClick={() => swiperRef.current?.slideNext()}>
              Next
            </button>
          </>
        ) : null}
      </div>
    </div>
  );
}
